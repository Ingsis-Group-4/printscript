plugins {
    id 'org.jetbrains.kotlin.jvm'
}

repositories {
    mavenCentral()
}
configurations {
    ktlint
}

dependencies {
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    ktlint("com.pinterest.ktlint:ktlint-cli:1.2.1") {
        attributes {
            attribute(Bundling.BUNDLING_ATTRIBUTE, getObjects().named(Bundling, Bundling.EXTERNAL))
        }
    }
}

tasks.register("ktlintCheck", JavaExec) {
    group = "verification"
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    mainClass = "com.pinterest.ktlint.Main"
    args "src/**/*.kt", "**.kts", "!**/build/**"
}

tasks.named("check") {
    dependsOn tasks.named("ktlintCheck")
}

tasks.register("ktlintFormat", JavaExec) {
    group = "formatting"
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    mainClass = "com.pinterest.ktlint.Main"
    jvmArgs "--add-opens=java.base/java.lang=ALL-UNNAMED"
    args "-F", "src/**/*.kt", "**.kts", "!**/build/**"
}

tasks.register('copyGitHooks', Copy) {
    from 'scripts/pre-commit-format'
    into '.git/hooks'
    eachFile { details ->
        details.mode = 0755
    }
}

test {
    useJUnitPlatform()
}




